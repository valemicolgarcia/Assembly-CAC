;PUNTO 3 PRACTICA 3

;Escribir un programa que encienda una luz a la vez, de las ocho conectadas al puerto paralelo del microprocesador a
;través de la PIO, en el siguiente orden: 0-1-2-3-4-5-6-7-6-5-4-3-2-1-0-1-2-3-4-5-6-7-6-5-4-3-2-1-0-1-... Cada luz debe
;estar encendida durante un segundo. Ejecutar en la configuración P1 C0 del simulador.


PIC EQU 20H 
TIMER EQU 10H
PIO EQU 30H
N_CLK EQU 10 ; ID 

ORG 40 ;
IP_CLK DW RUT_CLK 

ORG 1000H
INICIO DB 1 ; 0000 0000

;---------------------------3000h------------------------------------
ORG 3000H
   
   ;---> RUTINA PARA ROTAR LOS BITS A LA IZQUIERDA 1 POSICION
   
   ROTARIZ: ADD AL, AL        ; al numero le sumo a si mismo, para que se vaya corriendo de a 1
   JNC SALTAR                      
   ADD AL, 1                  ; si hay carry significa que se perdio un byte por la izquierda, por eso le sumamos 1 y se ve por la derecha
   SALTAR: DEC BL             ; disminuyo cantidad de veces a rotar
   JNZ ROTARIZ
   RET                 
   
   ;---> RUTINA PARA ROTAR LOS BITS A LA DERECHA 1 POSICION (7 A IZQ)
   ROTARDER: DEC BL         ;resto los 8 bits con 1 posicion a rotar (1 para la der = 7 para izq)
   ;entonces en AL tengo las posiciones para ROTARIZ
   CALL ROTARIZ
   RET

;----> RUTINA DE ATENCION A LA INTERRUPCION 
RUT_CLK: MOV AL, INICIO ;luz del 0000 0001
  OUT PIO + 1, AL
  
  ;--> ROTACION HACIA LA IZQUIERDA
  CMP CL,7 ;roto hacia la izquierda los bits 7 veces
  JNS SEGUIR ;mientras cl sea mas chico, roto a izq
  
  MOV BL, 1 ; 1 posicion
  CALL ROTARIZ
  MOV INICIO, AL ;modifico en memoria el numero rotado
  INC CL
  JMP CONTINUE
  ;---> ROTACION HACIA LA DERECHA
  SEGUIR: CMP CL, 14
  JNS INICIALIZAR
  MOV BL, 8 ;cantidad de bits
  CALL ROTARDER ;me modifica el registro al
  MOV INICIO, AL ; guardo en memoria
  INC CL
  JMP CONTINUE
  
  INICIALIZAR: MOV CL, 0 ;inicializo para que vuelva a arrancar
  
  ;para el fin de la interrupcion>>>>
  CONTINUE: MOV AL, 0
  OUT TIMER, AL       ; CONT lo vuelve a poner en 0 
  MOV AL, 20H         ; termina la subrutina 
  OUT PIC, AL  

IRET 

;-------------------------------2000h-------------------------------
ORG 2000H

CLI
; configuracion del PIC
MOV AL, 0FDH          
OUT PIC + 1, AL       ;IMR habilita timer --> 1111 1101 
MOV AL, N_CLK        
OUT PIC + 5, AL       ;INT 1 --> ID

; configuracion TIMER
MOV AL, 1             ;
OUT TIMER + 1, AL     ; COMP= 1, cada un seg hay una interrup 

; configuracion del PIO
MOV AL, 0
OUT PIO + 3, AL       ; CB = 0000 0000 
OUT PIO + 1, AL       ; PB = 0000 0000
OUT TIMER, AL         ; CONT = 0 

STI 

MOV CL, 0 ;pasaje por registro
LAZO: JMP LAZO

INT 0
END